{
  "name": "verificationapp",
  "version": "2.0.1",
  "description": "Verifying Business Partners with a extension application for SAP BTP",
  "repository": "github:SAP-samples/btp-build-resilient-apps",
  "license": "UNLICENSED",
  "private": true,
  "engines": {
    "node": "^16.15"
  },
  "config": {
    "imagePrefix": "<replace with your registry/user>"
  },
  "dependencies": {
    "@sap-cloud-sdk/connectivity": "^3.0.0",
    "@sap-cloud-sdk/core": "^1.54.0",
    "@sap-cloud-sdk/http-client": "^3.0.0",
    "@sap-cloud-sdk/util": "^3.0.1",
    "@sap/cds": "6.8.4",
    "@sap/cloud-sdk-vdm-business-partner-service": "^2.1.0",
    "@sap/hana-client": "^2.15.19",
    "@sap/xb-msg-amqp-v100": "^0.9.58",
    "@sap/xsenv": "^3.4.0",
    "@sap/xssec": "^3.2.15",
    "@xmldom/xmldom": "^0.8.6",
    "cross-var": "^1.1.0",
    "express": "^4.18.2",
    "hdb": "^0.19.5",
    "lodash": "^4.17.21",
    "passport": "^0.6.0",
    "supertest": "^6.3.3",
    "tar": "^6.1.13",
    "typescript": "^5.0.2"
  },
  "devDependencies": {
    "@sap/approuter": "^14.0.0",
    "@sap/eslint-plugin-cds": "^2.6.1",
    "@sap/eslint-plugin-ui5-jsdocs": "2.0.x",
    "@sap/hdi-deploy": "4.7.1",
    "@sap/html5-repo-mock": "2.1.1",
    "@sap/ui5-builder-webide-extension": "^1.1.9",
    "@sap/ux-specification": "^1.102.14",
    "@sapui5/ts-types": "1.116.x",
    "@types/expect": "^24.3.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "^20.1.4",
    "@typescript-eslint/eslint-plugin": "^5.48.2",
    "@typescript-eslint/parser": "^5.48.2",
    "@ui5/cli": "^3.0.0",
    "axios": "^1.2.3",
    "bestzip": "2.2.1",
    "cds2types": "^3",
    "chai": "^4.3.7",
    "chai-as-promised": "^7.1.1",
    "chai-http": "^4.3.0",
    "chai-subset": "^1.6.0",
    "concurrently": "^8.0.1",
    "eslint": "8.45.x",
    "eslint-config-prettier": "^8.6.0",
    "eslint-plugin-prettier": "^5.0.0",
    "husky": "^8.0.3",
    "jest": "^29.3.1",
    "lint-staged": "^13.1.0",
    "mocha": "^10.2.0",
    "mochawesome": "^7.1.3",
    "mochawesome-report-generator": "^6.2.0",
    "npm-check-updates": "^16.6.2",
    "npm-run-all": "^4.1.5",
    "prettier": "^3.0.0",
    "rimraf": "5.0.1",
    "sqlite3": "^5.1.4",
    "ts-mocha": "^10.0.0"
  },
  "scripts": {
    "update-dependencies": "ncu -u",
    "test": "ts-mocha tests/general.spec.ts --timeout 30000 --reporter mochawesome",
    "start": "DEBUG=remote cds run --profile production",
    "buildtypes": "cds2types --cds ./srv/admin.cds --output ./srv/model/entities.ts --debug",
    "build:cf": "npm run build:cds && npm run cleanup:ts && npm run build:ts && npm run build --prefix app/businesspartners",
    "deploy:live": "mbt build -e live.mtaext --mtar BPVerification.mtar && cf deploy mta_archives/BPVerification.mtar",
    "deploy:trial": "mbt build -e trial.mtaext --mtar BPVerification.mtar && cf deploy mta_archives/BPVerification.mtar",
    "build:ts": "tsc",
    "build:cds": "cds build --production",
    "cleanup:ts": "npx rimraf ./gen/srv/srv/**/*.ts",
    "ts-typecheck": "tsc --noEmit",
    "prettier-format": "prettier --check --config .prettierrc './{srv,tests}/**/*.{ts,js}' --write",
    "lint": "eslint . --ext .ts",
    "prepare": "node -e \"if (process.env.NODE_ENV !== 'production'){process.exit(1)} \" || husky install",
    "pre-commit": "npx lint-staged && npm run test",
    "----": "----",
    "build:html5-deployer": "cross-var docker build -t $npm_package_config_imagePrefix/verification-html5-deployer ./app/html5-deployer",
    "push:html5-deployer": "cross-var docker push $npm_package_config_imagePrefix/verification-html5-deployer",
    "-----": "------",
    "start:localapp": "cds-ts watch --in-memory --with-mocks",
    "start:hybrid": "DEBUG=ALL cds-ts watch --profile hybrid",
    "start:production": "DEBUG=ALL cds-ts run --profile production",
    "start:tunnelling": "cf ssh BPVerification-srv -N -L 20003:connectivityproxy.internal.cf.us20.hana.ondemand.com:20003",
    "start:ui": "npm run start:local --prefix app/businesspartners",
    "start:all-local": "concurrently --names \"CC,APP,UI\" -c \"green,blue,magenta\" \"npm run start:localapp\" \"npm run start:ui\"",
    "start:all-hybrid": "concurrently --names \"CC,APP,UI\" -c \"bgBlue.bold,bgMagenta.bold\" \"DEBUG=rest,odata npm run start:hybrid\" \"npm run start:ui\"",
    "start:production-like": "concurrently --names \"CC,APP,UI\" -c \"green,blue,magenta\" \"npm run start:tunnelling\" \"npm run start:hybrid\" \"npm run start:ui\"",
    "start:wdi5": "npm run wdi5 --prefix app/businesspartners",
    "--------": "-----------",
    "pack:srv": "pack build $npm_package_config_imagePrefix/verificationapp-srv:latest --path gen/srv --buildpack gcr.io/paketo-buildpacks/nodejs --builder paketobuildpacks/builder:base --env BP_NODE_RUN_SCRIPTS=''",
    "pack:db": "pack build $npm_package_config_imagePrefix/verificationapp-hana-deployer:latest --path gen/db --buildpack gcr.io/paketo-buildpacks/nodejs --builder paketobuildpacks/builder:base --env BP_NODE_RUN_SCRIPTS=''",
    "pack:ui": "npm run build --prefix app/businesspartners && npm run copy:kyma --prefix app/businesspartners && docker build -t $npm_package_config_imagePrefix/verification-html5-deployer app/html5-deployer",
    "pack:all": "npm run build:cf && npm run pack:srv && npm run pack:db && npm run pack:ui",
    "-------": "-------------",
    "push:srv": "docker push $npm_package_config_imagePrefix/verificationapp-srv:latest",
    "push:db": "docker push $npm_package_config_imagePrefix/verificationapp-hana-deployer",
    "push:ui": "docker push $npm_package_config_imagePrefix/verification-html5-deployer:latest",
    "push:all": "npm run push:srv && npm run push:db && npm run push:ui",
    "deploy:kyma": "helm upgrade verificationapp ./chart --debug"
  },
  "lint-staged": {
    "*.ts": [
      "eslint",
      "prettier --check --config .prettierrc --write"
    ]
  },
  "cds": {
    "features": {
      "fetch_csrf": true
    },
    "hana": {
      "deploy-format": "hdbtable"
    },
    "requires": {
      "db": {
        "kind": "sqlite",
        "[production]": {
          "kind": "hana-cloud",
          "pool": {
            "acquireTimeoutMillis_doc": "max milliseconds an acquire call will wait for a resource before timing out. (default no limit), if supplied should non-zero positive integer.",
            "acquireTimeoutMillis": 4000,
            "softIdleTimeoutMillis_doc": "amount of time an object may sit idle in the pool before it is eligible for eviction by the idle object evictor (if any), with the extra condition that at least 'min idle' object instances remain in the pool. Default -1 (nothing can get evicted)",
            "softIdleTimeoutMillis": 80000,
            "evictionRunIntervalMillis_doc": "How often to run eviction checks. Default: 0 (does not run).",
            "evictionRunIntervalMillis": 0,
            "max_doc": "maximum number of resources to create at any given time. (default=1)",
            "max": 3000,
            "xmin_doc": "minimum number of resources to keep in pool at any given time. If this is set >= max, the pool will silently set the min to equal max. (default=0)",
            "min": 10
          }
        },
        "[hybrid]": {
          "kind": "hana-cloud"
        }
      },
      "messaging": {
        "kind": "file-based-messaging",
        "file": "../msg-box",
        "[production]": {
          "kind": "enterprise-messaging-shared"
        },
        "[hybrid]": {
          "kind": "enterprise-messaging-shared"
        }
      },
      "OP_API_BUSINESS_PARTNER_SRV": {
        "kind": "odata-v2",
        "model": "srv/external/OP_API_BUSINESS_PARTNER_SRV"
      },
      "auth": {
        "kind": "xsuaa"
      }
    }
  },
  "sapux": [
    "app/businesspartners"
  ],
  "ui5": {
    "dependencies": [
      "@sap/ui5-builder-webide-extension"
    ]
  },
  "jest": {
    "testEnvironment": "node",
    "testTimeout": 20000
  }
}
